package com.bacon.controllers;

import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;

import com.bacon.models.OrderItems;
import com.bacon.models.Orders;
import com.bacon.services.OrdersService;
import com.fasterxml.jackson.core.JsonParseException;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;

@CrossOrigin
@Controller
@RequestMapping(value="/profile/orders")
public class OrdersController {
	
	private OrdersService ordersService;
	
	@Autowired
	public OrdersController (OrdersService ordersService) {
		this.ordersService = ordersService;
	}
	
	//get all orders
	@GetMapping(produces=MediaType.APPLICATION_JSON_VALUE)
	public ResponseEntity<List<Orders>> getAll(){
		System.out.println("controller...");
		List<Orders> orders =  ordersService.getAll();
		return new ResponseEntity<List<Orders>>(orders,HttpStatus.OK);
	}
	
	//get all orders by userId
	@PostMapping(value = "/past-orders" ,consumes=MediaType.APPLICATION_JSON_VALUE, produces=MediaType.APPLICATION_JSON_VALUE)
	public ResponseEntity<List<Orders>> getAllOrdersByCustId(@RequestBody String userInfoJson) throws JsonParseException, JsonMappingException, IOException{
		Map<String, String> userInfo = new HashMap<String, String>();
        userInfo = new ObjectMapper().readValue(userInfoJson, new TypeReference<Map<String, String>>(){});
        
        int custId = Integer.parseInt(userInfo.get("cust_id"));
        
        List<Orders> orderItems = ordersService.getAllOrdersByCustId(custId);
        return new ResponseEntity<List<Orders>>(orderItems, HttpStatus.OK);
	}
	
	//create new order
	
	//update orderStatus
	
	//update shippingStatus
	
	
	
	
}
