package com.bacon.controllers;

import java.io.IOException;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;

import com.bacon.models.OrderItems;
import com.bacon.services.OrderItemsService;
import com.fasterxml.jackson.core.JsonParseException;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;

@Controller
@RequestMapping(value = "/profile")
public class OrderItemsController {
	
	private OrderItemsService orderItemsService;
	
	@Autowired
	public OrderItemsController (OrderItemsService orderItemsService) {
		this.orderItemsService = orderItemsService;
	}

//	@PostMapping(value="/add", consumes=MediaType.APPLICATION_JSON_VALUE, produces=MediaType.APPLICATION_JSON_VALUE)
//	public ResponseEntity<OrderItems> addFlashCard(@RequestBody OrderItems newOrderItem){
//		OrderItems orderItem = orderItemsService.addOrderItem(newOrderItem);
//		return new ResponseEntity<OrderItems>(orderItem, HttpStatus.CREATED); //Http status code = 201
//	}
	
	@PostMapping(value = "/add", consumes = MediaType.APPLICATION_JSON_VALUE)
	public ResponseEntity addOrderItem(@RequestBody String newOrderInfoJson) throws JsonParseException, JsonMappingException, IOException {

		// map the incoming Json to an array for quick reference
		String[] orderItemDetails = new ObjectMapper().readValue(newOrderInfoJson, String[].class);

		int custId = Integer.parseInt(orderItemDetails[0]);
		int quantity = Integer.parseInt(orderItemDetails[1]);
		int inventoryId = Integer.parseInt(orderItemDetails[2]);
		
		if(orderItemsService.addOrderItem(custId, quantity, inventoryId))
			return new ResponseEntity<>(HttpStatus.CREATED);
		
		//inValide Card number 
		return new ResponseEntity<>(HttpStatus.NOT_ACCEPTABLE);
	}
	
	
	//get items by custId and orderstatus 1 for cart items
	
	//get items by custId and orderstatus 2 for saved for later items
	
	//get items by orderId
	
	//update items from orderstatus 1 to 2
	
	//update items from orderstatus 1 to 3 and get orderId
	
	
	
}
